[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 quadkeyr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/create_rasters_from_grid.html","id":"generate-rasters-from-facebook-mobility-data","dir":"Articles","previous_headings":"","what":"Generate rasters from Facebook mobility data","title":"create_rasters_from_grid","text":"section focuses creating raster QuadKey data formatted provided Facebook Mobility data.","code":""},{"path":"/articles/create_rasters_from_grid.html","id":"step-1-read-all-the-csv-files-from-a-folder-and-format-them","dir":"Articles","previous_headings":"Generate rasters from Facebook mobility data","what":"Step 1: read all the csv files from a folder and format them","title":"create_rasters_from_grid","text":"files area level detail, dates times change. read_all_files produce warning case days times missing.","code":"files <- read_all_files(\"../geocovid/data/rasters/city/\")  files"},{"path":"/articles/create_rasters_from_grid.html","id":"step-2-convert-the-quadkey-grid-to-latlong-coordinates","dir":"Articles","previous_headings":"Generate rasters from Facebook mobility data","what":"Step 2: Convert the Quadkey grid to lat/long coordinates","title":"create_rasters_from_grid","text":"Even files correspond area analysis, can vary number QuadKeys reported. select files QuadKeys data al least convert coordinates. Let’s plot grid!","code":"quadkeys <-  unique(files$quadkey)  qtll <- quadkey_to_latlong(quadkeys = quadkeys) qtll #> Simple feature collection with 150 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -58.60107 ymin: -34.59704 xmax: -58.50769 ymax: -34.50203 #> Geodetic CRS:  WGS 84 #> First 10 features: #>              quadkey                    geometry #> 150 2103213001231011 POINT (-58.56262 -34.52466) #> 149 2103213001213321 POINT (-58.55164 -34.51561) #> 148 2103213001230331 POINT (-58.58459 -34.55181) #> 147 2103213001231323 POINT (-58.55164 -34.55634) #> 146 2103213001322102 POINT (-58.51318 -34.56538) #> 145 2103213001213313 POINT (-58.54065 -34.51108) #> 144 2103213001213032 POINT (-58.56812 -34.50203) #> 143 2103213001302231 POINT (-58.51868 -34.51561) #> 142 2103213001232323 POINT (-58.59558 -34.59252) #> 141 2103213001230300 POINT (-58.60107 -34.54276)"},{"path":"/articles/create_rasters_from_grid.html","id":"step-3-complete-the-grid","dir":"Articles","previous_headings":"Generate rasters from Facebook mobility data","what":"Step 3: Complete the grid","title":"create_rasters_from_grid","text":"QuadKeys missing, can’t consider regular grid. order create polygons, let’s complete grid. Pay attention output list 3 elements: data, num_rows num_cols. num_cols num_rows refer number columns rows, use data create raster. Let’s see completing grid worked:","code":"regular_grid <- regular_qk_grid(qtll) regular_grid #> $data #> Simple feature collection with 396 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -58.60107 ymin: -34.59704 xmax: -58.50769 ymax: -34.50203 #> Geodetic CRS:  WGS 84 #> First 10 features: #>              quadkey                    geometry tileX tileY #> 246 2103213001302123 POINT (-58.50769 -34.50203) 22117 39467 #> 245 2103213001302303 POINT (-58.50769 -34.51108) 22117 39469 #> 244 2103213001302321 POINT (-58.50769 -34.51561) 22117 39470 #> 243 2103213001302323 POINT (-58.50769 -34.52014) 22117 39471 #> 242 2103213001320103 POINT (-58.50769 -34.52919) 22117 39473 #> 241 2103213001320121 POINT (-58.50769 -34.53371) 22117 39474 #> 240 2103213001320301 POINT (-58.50769 -34.54276) 22117 39476 #> 239 2103213001320323 POINT (-58.50769 -34.55634) 22117 39479 #> 238 2103213001322101 POINT (-58.50769 -34.56086) 22117 39480 #> 237 2103213001322103 POINT (-58.50769 -34.56538) 22117 39481 #>  #> $num_rows #> [1] 21 #>  #> $num_cols #> [1] 17"},{"path":"/articles/create_rasters_from_grid.html","id":"step-4-create-the-polygons","dir":"Articles","previous_headings":"Generate rasters from Facebook mobility data","what":"Step 4: Create the polygons","title":"create_rasters_from_grid","text":"regular grid quadkeys bounding box level detail, combined information data provided. can select variables part analysis also create new variables needed.","code":"# Now we can transform the quadkeys into polygons polygrid <- grid_to_polygon(regular_grid$data) polygrid #> Simple feature collection with 396 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -58.60107 ymin: -34.60156 xmax: -58.5022 ymax: -34.50203 #> Geodetic CRS:  WGS 84 #> First 10 features: #>             quadkey                       geometry #> 1  2103213001233203 POLYGON ((-58.57361 -34.588... #> 2  2103213001320201 POLYGON ((-58.52966 -34.547... #> 3  2103213003010110 POLYGON ((-58.59009 -34.601... #> 4  2103213001320232 POLYGON ((-58.52417 -34.560... #> 5  2103213001213323 POLYGON ((-58.55164 -34.524... #> 6  2103213001230322 POLYGON ((-58.60107 -34.560... #> 7  2103213001322200 POLYGON ((-58.53516 -34.583... #> 8  2103213001233103 POLYGON ((-58.55164 -34.569... #> 9  2103213001302202 POLYGON ((-58.53516 -34.515... #> 10 2103213001320100 POLYGON ((-58.51318 -34.529... polyvar <- files |>         select(day, time, quadkey, n_crisis, percent_change) |>         inner_join(polygrid, by = 'quadkey' ) |>   apply_weekly_lag()   polyvar7 <-  polyvar |>   drop_na(percent_change_7)"},{"path":"/articles/create_rasters_from_grid.html","id":"step-5-create-the-rasters-for-the-variables-and-data-involved-","dir":"Articles","previous_headings":"Generate rasters from Facebook mobility data","what":"Step 5: Create the rasters for the variables and data involved.","title":"create_rasters_from_grid","text":"rasters going created automatically day time reported. raster created <filename>_<date>_<time>.tif. function polygon_to_raster work even days times missing. one rasters can look like. can see, overlapping polygon grid perfect:","code":"# variable 1 polygon_to_raster(data = polyvar,                   nx = grid$num_cols +1 ,                   ny = grid$num_rows +1 ,                   template = polyvar,                   variable = 'percent_change',                   filename = 'cityA',                   path = \"data/\"                   )  # variable 2 polygon_to_raster(data = polyvar7,                   nx = grid$num_cols +1 ,                   ny = grid$num_rows +1 ,                   template = polyvar7,                   variable = 'percent_change_7',                   filename = 'cityA',                   path = \"data/\"                   )"},{"path":[]},{"path":[]},{"path":"/articles/get_grid_from_quadkeys.html","id":"define-the-area","dir":"Articles","previous_headings":"Create a raster from variables reported by Quadkeys for a specified map area and level of detail > Step 1: Creata a grid of quadkeys","what":"1.1 Define the area","title":"get_grid_from_quadkeys","text":"First, define xmin, xmax, ymin ymax delimit area QuadKey grid creation. example, selected xmin = -59, xmax = -57, ymin = -35, ymax = -34. Let’s plot points.","code":""},{"path":"/articles/get_grid_from_quadkeys.html","id":"select-the-level-of-detail","dir":"Articles","previous_headings":"Create a raster from variables reported by Quadkeys for a specified map area and level of detail > Step 1: Creata a grid of quadkeys","what":"1.2 Select the level of detail","title":"get_grid_from_quadkeys","text":"QuadKey grid can level detail 1 (less detail) 23 (detail). function create_qk_grid return three outputs: grid$data dataframe tileX, tileY QuadKey value element grid grid$num_rows number rows grid$num_cols number columns grid.","code":"grid <-  create_qk_grid(                xmin = -59,                xmax = -57,                ymin = -35,                ymax = -34,                level = 12) head(grid$data) #>   tileX tileY      quadkey #> 1  1376  2473 210321302002 #> 2  1376  2472 210321302000 #> 3  1376  2471 210321300222 #> 4  1376  2470 210321300220 #> 5  1376  2469 210321300202 #> 6  1376  2468 210321300200"},{"path":"/articles/get_grid_from_quadkeys.html","id":"get-the-grid-coordinates-from-the-quadkeys","dir":"Articles","previous_headings":"Create a raster from variables reported by Quadkeys for a specified map area and level of detail > Step 1: Creata a grid of quadkeys","what":"1.3 Get the grid coordinates from the QuadKeys","title":"get_grid_from_quadkeys","text":"coordinates extracted QuadKeys using function extract_qk_coords() can visualize points map understand better results. grid points representing QuadKeys. Remember points represent upper-left corner QuadKey, might give impression precisely cover entire area.","code":"grid_coords <- extract_qk_coord(data = grid$data) head(grid_coords) #> Simple feature collection with 6 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -59.0625 ymin: -34.958 xmax: -59.0625 ymax: -34.59704 #> Geodetic CRS:  WGS 84 #>   tileX tileY      quadkey                   geometry #> 1  1376  2473 210321302002   POINT (-59.0625 -34.958) #> 2  1376  2472 210321302000 POINT (-59.0625 -34.88593) #> 3  1376  2471 210321300222  POINT (-59.0625 -34.8138) #> 4  1376  2470 210321300220 POINT (-59.0625 -34.74161) #> 5  1376  2469 210321300202 POINT (-59.0625 -34.66936) #> 6  1376  2468 210321300200 POINT (-59.0625 -34.59704)"},{"path":"/articles/get_grid_from_quadkeys.html","id":"conversion-to-polygons","dir":"Articles","previous_headings":"Create a raster from variables reported by Quadkeys for a specified map area and level of detail > Step 1: Creata a grid of quadkeys","what":"1.4 Conversion to polygons","title":"get_grid_from_quadkeys","text":"Now, let’s proceed create polygons.  worked! can see , coordinates randomly selected starting point situated within polygons, specific position inside polygon. expected. want see grid, can also check app:","code":"polygrid = grid_to_polygon(grid_coords) head(polygrid) #> Simple feature collection with 6 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -57.04102 ymin: -34.37971 xmax: -56.95312 ymax: -33.94336 #> Geodetic CRS:  WGS 84 #>        quadkey                       geometry #> 1 210321132133 POLYGON ((-57.04102 -34.016... #> 2 210321132311 POLYGON ((-57.04102 -34.089... #> 3 210321132313 POLYGON ((-57.04102 -34.161... #> 4 210321132331 POLYGON ((-57.04102 -34.234... #> 5 210321132333 POLYGON ((-57.04102 -34.307... #> 6 210321310111 POLYGON ((-57.04102 -34.379... qkmap_app()"},{"path":"/articles/get_grid_from_quadkeys.html","id":"raster-creation","dir":"Articles","previous_headings":"Create a raster from variables reported by Quadkeys for a specified map area and level of detail > Step 1: Creata a grid of quadkeys","what":"1.4 Raster creation","title":"get_grid_from_quadkeys","text":"Let’s generate raster. data_provided dataset consists QuadKeys linked variable value. dataset contains QuadKeys within defined study area detail level, grid QuadKeys present. merge polygrid data_provided using QuadKey key. Please note data_provided shouldn’t sf dataset geometry column join executed correctly. Now, can use dataframe create raster.","code":"data('data_provided') head(data_provided) #>        quadkey variable #> 1 210321132133     0.22 #> 2 210321132311     0.56 #> 3 210321132313     0.27 #> 4 210321132331     0.06 #> 5 210321132333     0.88 #> 6 210321310111     0.22 data_raster <-  polygrid |>   dplyr::inner_join(data_provided,                      by = c('quadkey'))  head(data_raster) #> Simple feature collection with 6 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -57.04102 ymin: -34.37971 xmax: -56.95312 ymax: -33.94336 #> Geodetic CRS:  WGS 84 #>        quadkey variable                       geometry #> 1 210321132133     0.22 POLYGON ((-57.04102 -34.016... #> 2 210321132311     0.56 POLYGON ((-57.04102 -34.089... #> 3 210321132313     0.27 POLYGON ((-57.04102 -34.161... #> 4 210321132331     0.06 POLYGON ((-57.04102 -34.234... #> 5 210321132333     0.88 POLYGON ((-57.04102 -34.307... #> 6 210321310111     0.22 POLYGON ((-57.04102 -34.379... raster <-  create_raster(template = data_raster,               nx = grid$num_cols +1,               ny = grid$num_rows +1,               data = data_raster,               var = 'variable')  raster #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>           Min. 1st Qu. Median      Mean 3rd Qu. Max. #> variable     0    0.22   0.49 0.5028611    0.76    1 #> dimension(s): #>   from to offset    delta refsys point x/y #> x    1 24 -59.06  0.08789 WGS 84 FALSE [x] #> y    1 15 -33.94 -0.07244 WGS 84 FALSE [y]  # In case you want to save it: # write_stars(obj = raster, #             dsn = \"raster.tif\")"},{"path":"/articles/quadkey_conversion.html","id":"bing-maps-tile-system-functions","dir":"Articles","previous_headings":"","what":"Bing Maps Tile System functions","title":"quadkey_conversion","text":"functions R version ones described Bing Maps Tile System webpage.","code":""},{"path":[]},{"path":"/articles/quadkey_conversion.html","id":"convert-latlong-coordinates-to-pixel-xy-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions > 1. If you have map coordinates, convert them to QuadKey numbers","what":"1.1 Convert lat/long coordinates to pixel XY coordinates","title":"quadkey_conversion","text":"","code":"lltp <- latlong_to_pixelXY(lat = -25,                             lon = -53,                             level = 4) lltp #> $pixelX #> [1] 1445 #>  #> $pixelY #> [1] 2342"},{"path":"/articles/quadkey_conversion.html","id":"convert-pixel-xy-coordinates-into-tile-xy-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions > 1. If you have map coordinates, convert them to QuadKey numbers","what":"1.2 Convert pixel XY coordinates into tile XY coordinates","title":"quadkey_conversion","text":"","code":"ptt <- pixelXY_to_tileXY(pixelX = lltp$pixelX,                          pixelY = lltp$pixelY) ptt #> $tileX #> [1] 5 #>  #> $tileY #> [1] 9"},{"path":"/articles/quadkey_conversion.html","id":"convert-tile-xy-coordinates-into-a-quadkey-number","dir":"Articles","previous_headings":"Bing Maps Tile System functions > 1. If you have map coordinates, convert them to QuadKey numbers","what":"1.3 Convert tile XY coordinates into a QuadKey number","title":"quadkey_conversion","text":"Ththis function returns QuadKey number string. Since estimating level 4, number consists 4 digits function latlong_to_quadkey can convert map coordinates QuadKeys function also work multiple coordinates","code":"tileXY_to_quadkey(tileX = ptt$tileX,                   tileY = ptt$tileY,                   level = 4) #> [1] \"2103\" latlong_to_quadkey(lat = -25,                    lon = -53,                    level = 4) #>   lat lon level pixelX pixelY tileY tileX quadkey #> 1 -25 -53     4   1445   2342     9     5    2103 #> Simple feature collection with 1 feature and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -53 ymin: -25 xmax: -53 ymax: -25 #> Geodetic CRS:  WGS 84 #>   quadkey        geometry #> 1    2103 POINT (-53 -25) latlong_to_quadkey(lat = c(-4, -25.33, -25.66),                    lon = c(-53, -60.33, -70.66),                    level = 4) #>      lat    lon level pixelX pixelY tileY tileX quadkey #> 1  -4.00 -53.00     4   1445   2094     8     5    2101 #> 2 -25.33 -60.33     4   1362   2346     9     5    2103 #> 3 -25.66 -70.66     4   1244   2350     9     4    2102 #> Simple feature collection with 3 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -70.66 ymin: -25.66 xmax: -53 ymax: -4 #> Geodetic CRS:  WGS 84 #>   quadkey              geometry #> 1    2101        POINT (-53 -4) #> 2    2103 POINT (-60.33 -25.33) #> 3    2102 POINT (-70.66 -25.66)"},{"path":"/articles/quadkey_conversion.html","id":"if-you-have-quadkeys-convert-them-to-map-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions","what":"2. If you have QuadKeys, convert them to map coordinates","title":"quadkey_conversion","text":"Let’s attempt reverse route.","code":""},{"path":"/articles/quadkey_conversion.html","id":"convert-a-quadkey-number-into-tile-xy-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions > 2. If you have QuadKeys, convert them to map coordinates","what":"2.1 Convert a QuadKey number into tile XY coordinates","title":"quadkey_conversion","text":"","code":"qtt <- quadkey_to_tileXY(\"2103\") qtt #> $tileX #> [1] 5 #>  #> $tileY #> [1] 9 #>  #> $level #> [1] 4"},{"path":"/articles/quadkey_conversion.html","id":"convert-tile-xy-coordinates-into-pixel-xy-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions > 2. If you have QuadKeys, convert them to map coordinates","what":"2.2 Convert tile XY coordinates into pixel XY coordinates","title":"quadkey_conversion","text":"","code":"ttp <- tileXY_to_pixelXY(tileX = qtt$tileX,                          tileY = qtt$tileY) ttp #> $pixelX #> [1] 1280 #>  #> $pixelY #> [1] 2304"},{"path":"/articles/quadkey_conversion.html","id":"convert-pixel-xy-coordinates-into-latlong-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions > 2. If you have QuadKeys, convert them to map coordinates","what":"2.3 Convert pixel XY coordinates into lat/long coordinates","title":"quadkey_conversion","text":"can also use function quadkey_to_latlong want apply steps together.","code":"ptll <- pixelXY_to_latlong(pixelX = ttp$pixelX,                            pixelY = ttp$pixelY,                            level = 4)  ptll #> $lat #> [1] -21.94305 #>  #> $lon #> [1] -67.5 quadkey_to_latlong(\"2103\") #> Simple feature collection with 1 feature and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -67.5 ymin: -21.94305 xmax: -67.5 ymax: -21.94305 #> Geodetic CRS:  WGS 84 #>   quadkey                geometry #> 1    2103 POINT (-67.5 -21.94305)"},{"path":"/articles/quadkey_conversion.html","id":"understanding-the-process-of-converting-coordinates","dir":"Articles","previous_headings":"Bing Maps Tile System functions","what":"3. Understanding the Process of Converting Coordinates","title":"quadkey_conversion","text":"Given process converting coordinates pixel XY, tile XY, QuadKey, latitude/longitude, one might expect conversion back latitude/longitude coordinates (section 2.3) yield values original input section 1. However, isn’t case, evidenced behavior functions pixelXY_to_tileXY tileXY_to_pixel_XY choosing latitude/longitude coordinates initial function, within specific tile represented unique tile XY coordinates QuadKey number. conversion back QuadKey latitude/longitude coordinates directly result initial values. discrepancy arises tileXY_to_pixel_XY provides pixel XY coordinates upper-left corner tile, exact coordinates chosen initially. Hence, converting latitude/longitude coordinates QuadKey back latitude/longitude won’t yield identical values, unless original latitude/longitude coordinates correspond upper-left pixel tile level detail. validate , consider coordinates obtained section 2.3 (lat = -21.94305, lon = -67.5) rerun functions. ’ll observe obtaining original input values unlikely unless initial coordinates correspond upper-left pixel tile. Understanding distinction crucial accurate use functions coordinate conversions.","code":""},{"path":"/articles/quadkey_conversion.html","id":"quadkey-map-visualizer-app","dir":"Articles","previous_headings":"Bing Maps Tile System functions","what":"4. QuadKey map visualizer app","title":"quadkey_conversion","text":"can visualize QuadKey location map using app included package.","code":"qkmap_app()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florencia D'Andrea. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"D'Andrea F (????). quadkeyr: Tools convert QuadKeys utilized Microsoft's Bing Maps Tile System raster images. R package version 0.0.0.9000.","code":"@Manual{,   title = {{quadkeyr}: Tools to convert QuadKeys utilized in Microsoft's Bing Maps Tile System into raster images},   author = {Florencia D'Andrea},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"quadkeyr-","dir":"","previous_headings":"","what":"Tools to convert QuadKeys utilized in Microsoft's Bing Maps Tile System into raster images","title":"Tools to convert QuadKeys utilized in Microsoft's Bing Maps Tile System into raster images","text":"⚠️ package review quadkeyr R package presents comprehensive toolkit tailored generating raster images QuadKeys within Microsoft’s Bing Maps Tile System. Designed integrate Bing Maps data R workflows, package facilitates creation QuadKey grids rasters introduces specialized functions processing Facebook Mobility data. goal quadkeyr : Bing Maps Tile System functions Provide functions R convert geographical coordinates QuadKeys described official documentation Create rasters based QuadKeys Complete grid QuadKeys within specified area level detail, create raster . Generate rasters Facebook mobility data Adapt functions described points 1 2 effectively process analyze Facebook mobility data. Introduce QuadKey map application enabling users validate function outcomes offering tools visualizing generated data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to convert QuadKeys utilized in Microsoft's Bing Maps Tile System into raster images","text":"can install development version quadkeyr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Fernandez-Lab-WSU/quadkeyr\")"},{"path":"/index.html","id":"references","dir":"","previous_headings":"Installation","what":"References","title":"Tools to convert QuadKeys utilized in Microsoft's Bing Maps Tile System into raster images","text":"Bing Maps Tile Systems - Microsoft R - slippymath: Slippy Map Tile Tools Python - pyquadkey2 Python - python-quadkey Python - mercantile Rust - geo-quadkey-rs TypeScript - quadkey-tilemath GeoCode Map viewer","code":""},{"path":"/reference/apply_weekly_lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a 7 day lag to the variable n_crisis — apply_weekly_lag","title":"Apply a 7 day lag to the variable n_crisis — apply_weekly_lag","text":"Applying week lag data create rasters showing people moving week ago date interest. function works quadkeys without NAs.","code":""},{"path":"/reference/apply_weekly_lag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a 7 day lag to the variable n_crisis — apply_weekly_lag","text":"","code":"apply_weekly_lag(data)"},{"path":"/reference/apply_weekly_lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a 7 day lag to the variable n_crisis — apply_weekly_lag","text":"data dataset","code":""},{"path":"/reference/apply_weekly_lag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a 7 day lag to the variable n_crisis — apply_weekly_lag","text":"dataframe extra colums n_crisis_lag_7 n_crisis_percent_7","code":""},{"path":"/reference/apply_weekly_lag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a 7 day lag to the variable n_crisis — apply_weekly_lag","text":"","code":"data <- result_read_all_files[1:500,] apply_weekly_lag(data) #> # A tibble: 191 × 11 #> # Groups:   quadkey, time [191] #>      lat   lon quadkey      country date_time n_crisis percent_change day        #>    <dbl> <dbl> <chr>        <chr>   <chr>        <dbl>          <dbl> <date>     #>  1 -34.8 -58.9 21032130022… AR      2020-04-…    143.        -11.5    2020-04-26 #>  2 -34.4 -58.8 21032130001… AR      2020-04-…    117.         11.8    2020-04-26 #>  3 -34.5 -58.6 21032130012… AR      2020-04-…    109.         10.9    2020-04-26 #>  4 -35.1 -58.9 21032130202… AR      2020-04-…    137.          0.519  2020-04-26 #>  5 -34.6 -59.0 21032130002… AR      2020-04-…     34.4         2.26   2020-04-26 #>  6 -34.4 -58.4 21032130011… NA      2020-04-…     84.9        -0.0685 2020-04-26 #>  7 -35.0 -58.5 21032130211… AR      2020-04-…    145.          9.10   2020-04-26 #>  8 -35.0 -59.0 21032130200… AR      2020-04-…     41.9         6.26   2020-04-26 #>  9 -34.7 -59.1 21032121131… AR      2020-04-…     37.1        -5.22   2020-04-26 #> 10 -35.2 -59.2 21032121313… AR      2020-04-…     90.9         0      2020-04-26 #> # ℹ 181 more rows #> # ℹ 3 more variables: time <dbl>, n_crisis_lag_7 <dbl>, percent_change_7 <dbl>"},{"path":"/reference/clip.html","id":null,"dir":"Reference","previous_headings":"","what":"Clips a number to the specified minimum and maximum values. — clip","title":"Clips a number to the specified minimum and maximum values. — clip","text":"function user internally latlong_to_pixelXY pixelXY_to_latlong. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clips a number to the specified minimum and maximum values. — clip","text":"","code":"clip(n, min_value, max_value)"},{"path":"/reference/clip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clips a number to the specified minimum and maximum values. — clip","text":"n number clip. min_value Minimum allowable value. max_value Maximum allowable value.","code":""},{"path":"/reference/clip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clips a number to the specified minimum and maximum values. — clip","text":"clipped value.","code":""},{"path":"/reference/clip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clips a number to the specified minimum and maximum values. — clip","text":"","code":"clip(n = 1,      min_value = 3,      max_value = 5) #> [1] 3"},{"path":"/reference/complete_grid_for_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares the grid of QuadKeys for the conversion to square polygons — complete_grid_for_polygons","title":"Prepares the grid of QuadKeys for the conversion to square polygons — complete_grid_for_polygons","text":"QuadKey's points grid represent upper-left corner QuadKey. function creates extra tile row column needed create square polygons QuadKeys borders area without adding explicitly new QuadKeys grid. function called internally grid_to_polygon.","code":""},{"path":"/reference/complete_grid_for_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares the grid of QuadKeys for the conversion to square polygons — complete_grid_for_polygons","text":"","code":"complete_grid_for_polygons(data)"},{"path":"/reference/complete_grid_for_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares the grid of QuadKeys for the conversion to square polygons — complete_grid_for_polygons","text":"data spatial dataset (sf) columns tileX, tileY quadkey.","code":""},{"path":"/reference/complete_grid_for_polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares the grid of QuadKeys for the conversion to square polygons — complete_grid_for_polygons","text":"spatial dataset (sf) columns tileX, tileY quadkey.","code":""},{"path":[]},{"path":"/reference/complete_grid_for_polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares the grid of QuadKeys for the conversion to square polygons — complete_grid_for_polygons","text":"","code":"grid = create_qk_grid(xmin = -59,                       xmax = -57,                       ymin = -35,                       ymax = -34,                       level = 11)  grid_coords <- extract_qk_coord(data = grid$data)   # You can use grid_to_polygon  extragrid <- complete_grid_for_polygons(grid_coords)"},{"path":"/reference/create_qk_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create grid of QuadKeys for a particular level of detail. — create_qk_grid","title":"Create grid of QuadKeys for a particular level of detail. — create_qk_grid","text":"Generates grid comprising QuadKeys within area defined maximum minimum coordinates latitude longitude along specified level detail.","code":""},{"path":"/reference/create_qk_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create grid of QuadKeys for a particular level of detail. — create_qk_grid","text":"","code":"create_qk_grid(xmin, xmax, ymin, ymax, level)"},{"path":"/reference/create_qk_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create grid of QuadKeys for a particular level of detail. — create_qk_grid","text":"xmin Minimum value x axis (longitude) xmax Maximum value y axis (latitude) ymin Minimum value x axis (longitude) ymax Maximum value Y axis (latitude) level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/create_qk_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create grid of QuadKeys for a particular level of detail. — create_qk_grid","text":"list returning QuadKeys dataframe (data), number rows (num_rows) columns (num_cols) grid.","code":""},{"path":"/reference/create_qk_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create grid of QuadKeys for a particular level of detail. — create_qk_grid","text":"","code":"grid = create_qk_grid( xmin = -59,                        xmax = -57,                        ymin = -35,                        ymax = -34,                        level = 12)"},{"path":"/reference/create_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a stars raster — create_raster","title":"Create a stars raster — create_raster","text":"use template enables creation accurate raster, even presence NAs.","code":""},{"path":"/reference/create_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a stars raster — create_raster","text":"","code":"create_raster(template, nx, ny, data, var)"},{"path":"/reference/create_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a stars raster — create_raster","text":"template spatial dataset (sf) polygon grid used template nx Integer; number cells x direction. ny Integer; number cells y direction. data spatial dataframe (sf) variable want represent raster. var column name variable plot.","code":""},{"path":"/reference/create_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a stars raster — create_raster","text":"stars object","code":""},{"path":[]},{"path":"/reference/create_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a stars raster — create_raster","text":"","code":"grid = create_qk_grid(                      xmin = -59,                      xmax = -57,                      ymin = -35,                      ymax = -34,                      level = 12)   grid_coords <- extract_qk_coord(data = grid$data)   polygrid <- grid_to_polygon(grid_coords)   data('data_provided')   data_raster <-  polygrid |>                    dplyr::inner_join(data_provided,                     by = c('quadkey' ))   raster <-  create_raster(template = data_raster,                          nx = grid$num_cols + 1,                          ny = grid$num_rows + 1,                          data = data_raster,                          var = 'variable')"},{"path":"/reference/data_provided.html","id":null,"dir":"Reference","previous_headings":"","what":"data_provided: fake dataset — data_provided","title":"data_provided: fake dataset — data_provided","text":"data frame simulating variable asociated QuadKey numbers.","code":""},{"path":"/reference/data_provided.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_provided: fake dataset — data_provided","text":"","code":"data_provided"},{"path":[]},{"path":"/reference/data_provided.html","id":"data-provided","dir":"Reference","previous_headings":"","what":"data_provided","title":"data_provided: fake dataset — data_provided","text":"data frame 360 rows 2 columns: quadkey QuadKey number character variable Numeric variable","code":""},{"path":"/reference/extract_qk_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract lat/long coordinates from the QuadKey number — extract_qk_coord","title":"Extract lat/long coordinates from the QuadKey number — extract_qk_coord","text":"Reads QuadKey number string extract lat/long coordinates upper-left corner QuadKey.","code":""},{"path":"/reference/extract_qk_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract lat/long coordinates from the QuadKey number — extract_qk_coord","text":"","code":"extract_qk_coord(data)"},{"path":"/reference/extract_qk_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract lat/long coordinates from the QuadKey number — extract_qk_coord","text":"data dataframe column named quadkey","code":""},{"path":"/reference/extract_qk_coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract lat/long coordinates from the QuadKey number — extract_qk_coord","text":"spatial dataframe (sf) containing tiles XY coordinates (tileX, tileY), QuadKey number (quadkey), column POINT geometry.","code":""},{"path":[]},{"path":"/reference/extract_qk_coord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract lat/long coordinates from the QuadKey number — extract_qk_coord","text":"","code":"grid <- create_qk_grid(xmin = -59,                        xmax = -40,                        ymin = -38,                        ymax = -20,                        level = 6)  grid_coords <- extract_qk_coord(data = grid$data)  plot(grid_coords)"},{"path":"/reference/extract_tile_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract lat/long coordinates from the tile XY coordinates. — extract_tile_coord","title":"Extract lat/long coordinates from the tile XY coordinates. — extract_tile_coord","text":"Reads tile XY coordinates extracts lat/long coordinates upper-left corner QuadKey.","code":""},{"path":"/reference/extract_tile_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract lat/long coordinates from the tile XY coordinates. — extract_tile_coord","text":"","code":"extract_tile_coord(data, level)"},{"path":"/reference/extract_tile_coord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract lat/long coordinates from the tile XY coordinates. — extract_tile_coord","text":"data dataframe columns named tileX tileY level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/extract_tile_coord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract lat/long coordinates from the tile XY coordinates. — extract_tile_coord","text":"spatial dataframe (sf) containing tiles XY coordinates (tileX, tileY)  column POINT geometry.","code":""},{"path":[]},{"path":"/reference/extract_tile_coord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract lat/long coordinates from the tile XY coordinates. — extract_tile_coord","text":"","code":"grid <- create_qk_grid(xmin = -59,                        xmax = -40,                        ymin = -38,                        ymax = -20,                        level = 6)  extract_tile_coord(data = grid$data,                    level = 6) #> Simple feature collection with 20 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -61.875 ymin: -36.59789 xmax: -45 ymax: -16.63619 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    tileX tileY quadkey                  geometry #> 1     21    39  210323 POINT (-61.875 -36.59789) #> 2     21    38  210321 POINT (-61.875 -31.95216) #> 3     21    37  210303 POINT (-61.875 -27.05913) #> 4     21    36  210301 POINT (-61.875 -21.94305) #> 5     21    35  210123 POINT (-61.875 -16.63619) #> 6     22    39  210332  POINT (-56.25 -36.59789) #> 7     22    38  210330  POINT (-56.25 -31.95216) #> 8     22    37  210312  POINT (-56.25 -27.05913) #> 9     22    36  210310  POINT (-56.25 -21.94305) #> 10    22    35  210132  POINT (-56.25 -16.63619)"},{"path":"/reference/format_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the data — format_data","title":"Format the data — format_data","text":"function modifies format three columns provided data.","code":""},{"path":"/reference/format_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the data — format_data","text":"","code":"format_data(data)"},{"path":"/reference/format_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the data — format_data","text":"data dataframe quadkey, date_time, country columns numeric variables","code":""},{"path":"/reference/format_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the data — format_data","text":"dataframe.","code":""},{"path":[]},{"path":"/reference/format_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the data — format_data","text":"","code":"#data(onefile) #format_data(data = onefile)"},{"path":"/reference/grid_to_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a grid of QuadKeys to square polygons — grid_to_polygon","title":"Convert a grid of QuadKeys to square polygons — grid_to_polygon","text":"main argument function, grid QuadKeys points representing lat/long WG84 coordinates specifically indicate upper-left corner QuadKey. transform coordinates square polygons, function supplements grid adding row column tiles. completion grid addresses QuadKeys located border area (complete_grid_for_polygons). function constructs polygons using points grid. Note possible associate QuadKey square polygon.","code":""},{"path":"/reference/grid_to_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a grid of QuadKeys to square polygons — grid_to_polygon","text":"","code":"grid_to_polygon(data)"},{"path":"/reference/grid_to_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a grid of QuadKeys to square polygons — grid_to_polygon","text":"data spatial dataset (sf) quadkey POINT geometry column.","code":""},{"path":"/reference/grid_to_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a grid of QuadKeys to square polygons — grid_to_polygon","text":"spatial dataset (sf) quadkey POLYGON column.","code":""},{"path":[]},{"path":"/reference/grid_to_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a grid of QuadKeys to square polygons — grid_to_polygon","text":"","code":"grid = create_qk_grid(xmin = -59,                       xmax = -57,                       ymin = -35,                       ymax = -34,                       level = 11)                        grid_coords <- extract_qk_coord(data = grid$data)                       grid_coords #> Simple feature collection with 96 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -59.0625 ymin: -34.88593 xmax: -57.12891 ymax: -33.87042 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    tileX tileY     quadkey                    geometry #> 1    688  1236 21032130200  POINT (-59.0625 -34.88593) #> 2    688  1235 21032130022  POINT (-59.0625 -34.74161) #> 3    688  1234 21032130020  POINT (-59.0625 -34.59704) #> 4    688  1233 21032130002  POINT (-59.0625 -34.45222) #> 5    688  1232 21032130000  POINT (-59.0625 -34.30714) #> 6    688  1231 21032112222  POINT (-59.0625 -34.16182) #> 7    688  1230 21032112220  POINT (-59.0625 -34.01624) #> 8    688  1229 21032112202  POINT (-59.0625 -33.87042) #> 9    689  1236 21032130201 POINT (-58.88672 -34.88593) #> 10   689  1235 21032130023 POINT (-58.88672 -34.74161)                        polygrid = grid_to_polygon(grid_coords)                       polygrid #> Simple feature collection with 96 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -59.0625 ymin: -35.03 xmax: -56.95312 ymax: -33.87042 #> Geodetic CRS:  WGS 84 #> First 10 features: #>        quadkey                       geometry #> 1  21032113213 POLYGON ((-57.12891 -34.016... #> 2  21032113231 POLYGON ((-57.12891 -34.161... #> 3  21032113233 POLYGON ((-57.12891 -34.307... #> 4  21032131011 POLYGON ((-57.12891 -34.452... #> 5  21032131013 POLYGON ((-57.12891 -34.597... #> 6  21032131031 POLYGON ((-57.12891 -34.741... #> 7  21032131033 POLYGON ((-57.12891 -34.885... #> 8  21032131211 POLYGON ((-57.12891 -35.03,... #> 9  21032113212 POLYGON ((-57.30469 -34.016... #> 10 21032113230 POLYGON ((-57.30469 -34.161..."},{"path":"/reference/ground_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Ground resolution at a specified latitude and level of detail — ground_res","title":"Ground resolution at a specified latitude and level of detail — ground_res","text":"Determines ground resolution (meters per pixel) specified latitude level detail. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/ground_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ground resolution at a specified latitude and level of detail — ground_res","text":"","code":"ground_res(latitude, level)"},{"path":"/reference/ground_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ground resolution at a specified latitude and level of detail — ground_res","text":"latitude Latitude (degrees) measure ground resolution. level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/ground_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ground resolution at a specified latitude and level of detail — ground_res","text":"ground resolution (meters / pixel)","code":""},{"path":"/reference/ground_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ground resolution at a specified latitude and level of detail — ground_res","text":"","code":"ground_res(latitude = 0,            level = 6) #> [1] 2445.985"},{"path":"/reference/latlong_to_pixelXY.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts lat/long coordinates to pixel XY coordinates — latlong_to_pixelXY","title":"Converts lat/long coordinates to pixel XY coordinates — latlong_to_pixelXY","text":"Converts point latitude/longitude WGS-84 coordinates (degrees) pixel XY coordinates specified level detail. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/latlong_to_pixelXY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts lat/long coordinates to pixel XY coordinates — latlong_to_pixelXY","text":"","code":"latlong_to_pixelXY(lat, lon, level)"},{"path":"/reference/latlong_to_pixelXY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts lat/long coordinates to pixel XY coordinates — latlong_to_pixelXY","text":"lat Latitude point, degrees. lon Longitude point, degrees. level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/latlong_to_pixelXY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts lat/long coordinates to pixel XY coordinates — latlong_to_pixelXY","text":"list returning pixel X pixel Y coordinates.","code":""},{"path":"/reference/latlong_to_pixelXY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts lat/long coordinates to pixel XY coordinates — latlong_to_pixelXY","text":"","code":"latlong_to_pixelXY(lat = -35,                    lon = -50,                    level = 6) #> $pixelX #> [1] 5916 #>  #> $pixelY #> [1] 9894 #>"},{"path":"/reference/latlong_to_quadkey.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert latitude/longitude coordinates into QuadKeys — latlong_to_quadkey","title":"Convert latitude/longitude coordinates into QuadKeys — latlong_to_quadkey","text":"Converts point latitude/longitude WGS-84 coordinates (degrees) Quadkey specified level detail. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/latlong_to_quadkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert latitude/longitude coordinates into QuadKeys — latlong_to_quadkey","text":"","code":"latlong_to_quadkey(lat, lon, level)"},{"path":"/reference/latlong_to_quadkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert latitude/longitude coordinates into QuadKeys — latlong_to_quadkey","text":"lat Latitude point, degrees. lon Longitude point, degrees. level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/latlong_to_quadkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert latitude/longitude coordinates into QuadKeys — latlong_to_quadkey","text":"dataframe latitude (lat), longitude (lon), level detail (level) QuadKey number string (quadkey).","code":""},{"path":"/reference/latlong_to_quadkey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert latitude/longitude coordinates into QuadKeys — latlong_to_quadkey","text":"","code":"latlong_to_quadkey(lat = 35.63051,                    lon = 139.69116,                   level = 20) #>        lat      lon level    pixelX    pixelY  tileY  tileX #> 1 35.63051 139.6912    20 238379006 105750530 413088 931167 #>                quadkey #> 1 13300211230321211111 #> Simple feature collection with 1 feature and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 139.6912 ymin: 35.63051 xmax: 139.6912 ymax: 35.63051 #> Geodetic CRS:  WGS 84 #>                quadkey                  geometry #> 1 13300211230321211111 POINT (139.6912 35.63051)"},{"path":"/reference/mapscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Map scale (1 : N) — mapscale","title":"Map scale (1 : N) — mapscale","text":"Determines map scale specified latitude, level detail, screen resolution. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/mapscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map scale (1 : N) — mapscale","text":"","code":"mapscale(latitude, level, screen_dpi)"},{"path":"/reference/mapscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map scale (1 : N) — mapscale","text":"latitude Latitude (degrees) measure map scale. level Level detail, 1 (lowest detail) 23 (highest detail). screen_dpi Resolution screen, dots per inch.","code":""},{"path":"/reference/mapscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map scale (1 : N) — mapscale","text":"map scale, expressed denominator N ratio 1 : N.","code":""},{"path":"/reference/mapscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map scale (1 : N) — mapscale","text":"","code":"mapscale(latitude = 0,          level = 6,          screen_dpi = 96) #> [1] 9244667"},{"path":"/reference/mapsize.html","id":null,"dir":"Reference","previous_headings":"","what":"Map size in pixels — mapsize","title":"Map size in pixels — mapsize","text":"Determines map width height (pixels) specified level detail. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/mapsize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map size in pixels — mapsize","text":"","code":"mapsize(level)"},{"path":"/reference/mapsize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map size in pixels — mapsize","text":"level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/mapsize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map size in pixels — mapsize","text":"map width height pixels.","code":""},{"path":"/reference/mapsize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map size in pixels — mapsize","text":"","code":"mapsize(level = 6) #> [1] 16384"},{"path":"/reference/missing_combinations.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects dates and times missing — missing_combinations","title":"Detects dates and times missing — missing_combinations","text":"Facebook mobility data reported daily 3 different times (0, 8, 16). function reads data extracted current files detects day time missing.","code":""},{"path":"/reference/missing_combinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects dates and times missing — missing_combinations","text":"","code":"missing_combinations(data)"},{"path":"/reference/missing_combinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects dates and times missing — missing_combinations","text":"data dataframe day time column.","code":""},{"path":"/reference/missing_combinations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects dates and times missing — missing_combinations","text":"dataframe missing days times, .","code":""},{"path":"/reference/missing_combinations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detects dates and times missing — missing_combinations","text":"","code":"# Sample dataset data <- data.frame(  day = c(\"2023-01-01\", \"2023-01-03\", \"2023-01-05\"),  time = c(0, 8, 16) )  missing_combinations(data) #>           day time #> 1  2023-01-02    0 #> 2  2023-01-03    0 #> 3  2023-01-04    0 #> 4  2023-01-05    0 #> 5  2023-01-01    8 #> 6  2023-01-02    8 #> 7  2023-01-04    8 #> 8  2023-01-05    8 #> 9  2023-01-01   16 #> 10 2023-01-02   16 #> 11 2023-01-03   16 #> 12 2023-01-04   16"},{"path":"/reference/pixelXY_to_latlong.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts pixel XY coordinatess into lat/long coordinates. — pixelXY_to_latlong","title":"Converts pixel XY coordinatess into lat/long coordinates. — pixelXY_to_latlong","text":"Converts pixel pixel XY coordinates specified level detail latitude/longitude WGS-84 coordinates (degrees). information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/pixelXY_to_latlong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts pixel XY coordinatess into lat/long coordinates. — pixelXY_to_latlong","text":"","code":"pixelXY_to_latlong(pixelX, pixelY, level)"},{"path":"/reference/pixelXY_to_latlong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts pixel XY coordinatess into lat/long coordinates. — pixelXY_to_latlong","text":"pixelX X coordinate point, pixels. pixelY Y coordinates point, pixels. level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/pixelXY_to_latlong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts pixel XY coordinatess into lat/long coordinates. — pixelXY_to_latlong","text":"list longitude latitude.","code":""},{"path":"/reference/pixelXY_to_latlong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts pixel XY coordinatess into lat/long coordinates. — pixelXY_to_latlong","text":"","code":"pixelXY_to_latlong(pixelX = 768,                    pixelY = 1280,                    level = 3) #> $lat #> [1] -40.9799 #>  #> $lon #> [1] -45 #>"},{"path":"/reference/pixelXY_to_tileXY.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts pixel XY coordinates into tile XY coordinates — pixelXY_to_tileXY","title":"Converts pixel XY coordinates into tile XY coordinates — pixelXY_to_tileXY","text":"Converts pixel XY coordinates tile XY coordinates tile containing specified pixel. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/pixelXY_to_tileXY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts pixel XY coordinates into tile XY coordinates — pixelXY_to_tileXY","text":"","code":"pixelXY_to_tileXY(pixelX, pixelY)"},{"path":"/reference/pixelXY_to_tileXY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts pixel XY coordinates into tile XY coordinates — pixelXY_to_tileXY","text":"pixelX Pixel X coordinate. pixelY Pixel Y coordinate.","code":""},{"path":"/reference/pixelXY_to_tileXY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts pixel XY coordinates into tile XY coordinates — pixelXY_to_tileXY","text":"list returning tile X tile Y coordinates.","code":""},{"path":"/reference/pixelXY_to_tileXY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts pixel XY coordinates into tile XY coordinates — pixelXY_to_tileXY","text":"","code":"pixelXY_to_tileXY(pixelX = 5916,               pixelY = 9894) #> $tileX #> [1] 23 #>  #> $tileY #> [1] 38 #>"},{"path":"/reference/polygon_to_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and save raster images for different dates and times — polygon_to_raster","title":"Create and save raster images for different dates and times — polygon_to_raster","text":"Creates one raster date time reported saves .tif.","code":""},{"path":"/reference/polygon_to_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and save raster images for different dates and times — polygon_to_raster","text":"","code":"polygon_to_raster(   data,   nx,   ny,   template,   variable = \"percent_change\",   filename,   path )"},{"path":"/reference/polygon_to_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and save raster images for different dates and times — polygon_to_raster","text":"data spatial dataframe (sf) variable want represent raster. nx Integer; number cells x direction. ny Integer; number cells y direction. template spatial dataset (sf) polygon grid used template variable column name variable plot. filename Select name file. date time included automatically name. path Path files stored.","code":""},{"path":"/reference/polygon_to_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and save raster images for different dates and times — polygon_to_raster","text":"many .tif files dates times dataset","code":""},{"path":[]},{"path":"/reference/polygon_to_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and save raster images for different dates and times — polygon_to_raster","text":"","code":"# TBD"},{"path":"/reference/quadkey_to_latlong.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a string of Quadkey numbers to lat/long coordinates — quadkey_to_latlong","title":"Convert a string of Quadkey numbers to lat/long coordinates — quadkey_to_latlong","text":"function converts Quadkeys latitude/longitude WGS-84 coordinates (degrees). information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/quadkey_to_latlong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a string of Quadkey numbers to lat/long coordinates — quadkey_to_latlong","text":"","code":"quadkey_to_latlong(quadkeys)"},{"path":"/reference/quadkey_to_latlong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a string of Quadkey numbers to lat/long coordinates — quadkey_to_latlong","text":"quadkeys vector unique QuadKey numbers.","code":""},{"path":"/reference/quadkey_to_latlong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a string of Quadkey numbers to lat/long coordinates — quadkey_to_latlong","text":"spatial data frame class sf quadkey column POINT geometry. coordinates represent upper-left corner QuadKey.","code":""},{"path":[]},{"path":"/reference/quadkey_to_latlong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a string of Quadkey numbers to lat/long coordinates — quadkey_to_latlong","text":"","code":"quadkey_to_latlong(c('213', '212', '210')) #> Simple feature collection with 3 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -90 ymin: -40.9799 xmax: -45 ymax: 0 #> Geodetic CRS:  WGS 84 #>   quadkey             geometry #> 3     210        POINT (-90 0) #> 2     212 POINT (-90 -40.9799) #> 1     213 POINT (-45 -40.9799)"},{"path":"/reference/quadkey_to_tileXY.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a QuadKey into tile XY coordinates. — quadkey_to_tileXY","title":"Converts a QuadKey into tile XY coordinates. — quadkey_to_tileXY","text":"information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/quadkey_to_tileXY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a QuadKey into tile XY coordinates. — quadkey_to_tileXY","text":"","code":"quadkey_to_tileXY(qk)"},{"path":"/reference/quadkey_to_tileXY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a QuadKey into tile XY coordinates. — quadkey_to_tileXY","text":"qk QuadKey number string.","code":""},{"path":"/reference/quadkey_to_tileXY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a QuadKey into tile XY coordinates. — quadkey_to_tileXY","text":"list returning tile X, tile Y coordinates level detail.","code":""},{"path":"/reference/quadkey_to_tileXY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a QuadKey into tile XY coordinates. — quadkey_to_tileXY","text":"","code":"quadkey_to_tileXY(qk = 213) #> $tileX #> [1] 3 #>  #> $tileY #> [1] 5 #>  #> $level #> [1] 3 #>"},{"path":"/reference/read_all_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all the .csv files in a folder and format the data. — read_all_files","title":"Read all the .csv files in a folder and format the data. — read_all_files","text":"function reads .csv files particular folder. files consistently contain identical columns, variations location, day, time. result, can uniformly apply specific formatting columns across files.\"","code":""},{"path":"/reference/read_all_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all the .csv files in a folder and format the data. — read_all_files","text":"","code":"read_all_files(path_to_csvs = path_to_csvs)"},{"path":"/reference/read_all_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all the .csv files in a folder and format the data. — read_all_files","text":"path_to_csvs Path folder .csv files stored","code":""},{"path":"/reference/read_all_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all the .csv files in a folder and format the data. — read_all_files","text":"dataframe information files.","code":""},{"path":[]},{"path":"/reference/read_all_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read all the .csv files in a folder and format the data. — read_all_files","text":"","code":"# read_all_files(path_to_csvs = 'data/')"},{"path":"/reference/regular_qk_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a irregular QuadKey grid into a regular grid — regular_qk_grid","title":"Converts a irregular QuadKey grid into a regular grid — regular_qk_grid","text":"function completes grid QuadKeys using bounding box data provided.","code":""},{"path":"/reference/regular_qk_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a irregular QuadKey grid into a regular grid — regular_qk_grid","text":"","code":"regular_qk_grid(data)"},{"path":"/reference/regular_qk_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a irregular QuadKey grid into a regular grid — regular_qk_grid","text":"data spatial dataset class sf POINT geometry","code":""},{"path":"/reference/regular_qk_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a irregular QuadKey grid into a regular grid — regular_qk_grid","text":"spatial dataset class sf POINT geometry","code":""},{"path":[]},{"path":"/reference/regular_qk_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a irregular QuadKey grid into a regular grid — regular_qk_grid","text":"","code":"quadkeys <- c('213', '210', '211')  qtll <- quadkey_to_latlong(quadkeys = quadkeys)  regular_qk_grid(qtll) #> $data #> Simple feature collection with 4 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -90 ymin: -40.9799 xmax: -45 ymax: 0 #> Geodetic CRS:  WGS 84 #>    quadkey             geometry tileX tileY #> 1      212 POINT (-90 -40.9799)     2     5 #> 3      211        POINT (-45 0)     3     4 #> 2      210        POINT (-90 0)     2     4 #> 11     213 POINT (-45 -40.9799)     3     5 #>  #> $num_rows #> [1] 1 #>  #> $num_cols #> [1] 1 #>"},{"path":"/reference/result_read_all_files.html","id":null,"dir":"Reference","previous_headings":"","what":"result_read_all_files: Fake dataset — result_read_all_files","title":"result_read_all_files: Fake dataset — result_read_all_files","text":"data frame similar potential output read_all_files().","code":""},{"path":"/reference/result_read_all_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"result_read_all_files: Fake dataset — result_read_all_files","text":"","code":"result_read_all_files"},{"path":[]},{"path":"/reference/result_read_all_files.html","id":"result-read-all-files","dir":"Reference","previous_headings":"","what":"result_read_all_files","title":"result_read_all_files: Fake dataset — result_read_all_files","text":"data frame 134,492 rows 9 columns: lat Latitude QuadKey centroid lon Longitude QuadKey centroid quadkey QuadKey number character country Country name date_time Date format %Y-%m-%d %H%M n_crisis Variable percent_change Variable day Day format %Y-%m-%d time Hour day number 1 24","code":""},{"path":"/reference/tileXY_to_pixelXY.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tile XY coordinates into pixel XY coordinates — tileXY_to_pixelXY","title":"Convert tile XY coordinates into pixel XY coordinates — tileXY_to_pixelXY","text":"Converts tile XY coordinates pixel XY coordinates upper-left pixel specified tile. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/tileXY_to_pixelXY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tile XY coordinates into pixel XY coordinates — tileXY_to_pixelXY","text":"","code":"tileXY_to_pixelXY(tileX, tileY)"},{"path":"/reference/tileXY_to_pixelXY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tile XY coordinates into pixel XY coordinates — tileXY_to_pixelXY","text":"tileX Tile X coordinate. tileY Tile Y coordinate.","code":""},{"path":"/reference/tileXY_to_pixelXY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tile XY coordinates into pixel XY coordinates — tileXY_to_pixelXY","text":"list returning pixel X pixel Y coordinates.","code":""},{"path":"/reference/tileXY_to_pixelXY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tile XY coordinates into pixel XY coordinates — tileXY_to_pixelXY","text":"","code":"tileXY_to_pixelXY(tileX = 3,                   tileY = 5) #> $pixelX #> [1] 768 #>  #> $pixelY #> [1] 1280 #>"},{"path":"/reference/tileXY_to_quadkey.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts tile XY coordinates into a quadkey. — tileXY_to_quadkey","title":"Converts tile XY coordinates into a quadkey. — tileXY_to_quadkey","text":"Converts tile XY coordinates QuadKey specified level detail. information, refer Microsoft Bing Maps Tile System documentation.","code":""},{"path":"/reference/tileXY_to_quadkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts tile XY coordinates into a quadkey. — tileXY_to_quadkey","text":"","code":"tileXY_to_quadkey(tileX, tileY, level)"},{"path":"/reference/tileXY_to_quadkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts tile XY coordinates into a quadkey. — tileXY_to_quadkey","text":"tileX Tile X coordinate. tileY Tile Y coordinate. level Level detail, 1 (lowest detail) 23 (highest detail).","code":""},{"path":"/reference/tileXY_to_quadkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts tile XY coordinates into a quadkey. — tileXY_to_quadkey","text":"quadkey number string.","code":""},{"path":"/reference/tileXY_to_quadkey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts tile XY coordinates into a quadkey. — tileXY_to_quadkey","text":"","code":"tileXY_to_quadkey(tileX = 23,                   tileY = 38,                   level = 6) #> [1] \"210331\""}]
